进程本质是对正在运行的程序的一个抽象，也就是说，它本质上是一种描述，一种概念，而不是具体的某样东西。

可以将一个真实的CPU模拟成多个虚拟的CPU（时间分片）
――注意，由于各个进程是分时间片运行的，所以执行一百万次自增运算的时间不是每次都一样的。

● 每个进程拥有它自己的"虚拟"CPU。
● 每个进程都有它自己的"逻辑"程序计数器。

▲ 操作系统是怎么实现进程的？
操作系统维护了一张进程表（结构体数组），一个进程表项可称为一个进程控制块。
该结构体包含了：
{
    存储管理：
    {
        正文段指针
        数据段指针
        堆栈段指针
    }
    文件管理：
    {
        根目录
        工作目录
        --------
        描述符
        ------
        用户ID
        组ID
    }
    进程管理：
    {
        寄存器
        程序状态字
        程序计数器
        堆栈指针
        --------
        进程状态
        进程优先级
        进程ID
        父进程
        进程组
        ------
        调度参数
        --------
        信号
        ----
        进程开始时间
        使用的CPU时间
        子进程的CPU时间
        下次报警时间
    }
}
进程切换是指进程在真实CPU上切换，进程在虚拟CPU中，是一直执行的。虚拟CPU的时间机制即是进程切换。