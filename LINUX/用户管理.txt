用户设置
    添加新用户 useradd
        useradd [选项] 用户名
        选项
            -u UID手动为用户设置组ID
            -d directory，家目录手工指定用户的家目录
            -c comment，用户说明手工指定用户的说明，如果有空格，需要将说明文字用双引号括起来
            -g group，组名手工指定用户的初始组，如果没指定，则添加到与当前用户名同名的组
            -G group，组名手工指定用户的附加组，如果有多个附加组，用空格隔开
            -s shell，命令解释器手工指定用户的登录 shell，默认是 /bin/bash
    修改用户信息 usermod  （user modify）
        usermod 命令的语法格式是：usermod [选项] 用户名   
        usermod 和 useradd 的功能类似，区别在于 usermod 命令的操作对象是已存在的用户
        所以，这两个命令的部分选项是一样的        
    设置用户密码 passwd
        光把用户添加上还不够，这时用户还不能登录，必须给用户设置一个密码用户才能正常登录
        passwd 命令的语法格式是：passwd [选项][用户名]，
        敲完这个命令后按下回车，系统会提示你输入密码
        普通用户只能修改自己的密码，这时只要输入 passwd，然后回车就可以，后面无需跟用户名。
        具体选项参数，请参看命令帮助
    修改用户密码状态 chage
        该命令查看用户密码信息、修改“密码最后一次设置的日期”、
        设置密码有效期、过期提醒等，具体请参看命令帮助
    删除用户 userdel
        带命令一版要加上 -r 选项； userdel -r 用户名
        意思是删除用户的同事，删除该用户的家目录，及其它与该用户相关的文件
组设置
    添加用户组 groupadd
        groupadd 选项 组名
        选项 -g GID  作用 ： 指定组iD
    修改已添加的组 groupmod
        groupmod 选项 组名
        选项    -g GID  作用：修改组ID；      -n 新组名 作用：修改组名
    删除组  groupdel
        语法格式：groupdel 组名
        注意： 
            如果该组是某个用户的初始组，那么这个组无法被删除，
            因为如果把这个组删了，用户就没地方放了。
            如果没有用户将该组当做初始组，而只是把它当做附加组，那么这个组就可以被删除。
    把用户添加到组中、从组中删除
        语法格式：gpasswd [选项] 组名
        选项：
            -a 用户名 作用：把用户加入组
            -d 用户名 作用：把用户从组中删除
        举例：
            gpasswd -a user1 root #把user1用户加入root组
            gpasswd -d user3 root #把user3用户从root组中删除
        说明：
            这里执行的把用户加入组的操作，事实上是作为附加用户加入该组的
其他：
    查看当前用户所属组  groups 、 id
    查看用户id、初始组id、附加组id  id
    切换用户  su
    查看用户登录信息  who  、 wwhow 、 whoami
    查看当前用户是否可以用sudo执行某命令  sudo -l
UID、GID、EUID、EGID
    登录linux账户时，虽然是用的用户名，但其实这个用户名只是人类易识别的标识，
    linux系统关注的则是该用户对应的ID号，这种对应关系记录在/etc/passwd中。
    Linux 系统中，每个用户的ID细分为2种，分别是用户ID（UID）和组ID（GID）。
    此外，Linux中还有有效用户ID（EUID）和有效组ID（EGID）的概念，相应的，
    UID称为实际用户，GID称为实际组。
    当我们以一个账号，如user登录账户时，在整个登录过程中，实际用户和实际组是不会变化的，
    但有效用户和有效组则是指当前以什么身份执行操作，这个身份是可以通过su或sodu命令任意切换的。
    当我切到管理员状态时，我得EUID为0(root),而我的UID仍是1000(user) -- 假定user的id是1000。
    使用who命令则可以查看当前实际用户，而whoami命令，可以查看当前有效用户。
    id命令显示的也是有效用户的相关id信息。
    在脚本用，可以通过命令whomai，得到执行该脚本的有效用户名，用过$(USER)变量得到实际用户名
linux下的账户系统文件
    Linux 环 境 下 的 帐 户 系 统 文 件 主 要 有 
    /etc/passwd 、 /etc/shadow 、/etc/group、/etc/gshadow、/etc/login.defs等
    1、/etc/passwd
        /etc/passwd 每行定义一个用户帐户，此文件对所有用户可读。
        一行又划分为多个字段定义用户帐号的不同属性，名字段间用“：”分隔。
            /etc/passwd 文件中各字段的含义
            用户名        用户登陆系统时使用的用户名，在系统中是唯一的
            口令          存放加密的口令，口令是 x，这表明用户的口令是被/etc/shadow 文件保护的
            用户标识号    系统内部用它来标识用户，每个用户的 UID 都是唯一的
                          root 用户的 UID 号是 0，普通用户从500 开始，从1－499是系统的标准帐户。
            组标识号      系统内部用它来标识用户所属的组
            注释性描述    例如存放用户全名等信息
            宿主目录      用户登陆系统后所进入的目录
            命令解释      指示该用户使用的 Shell，Linux 默认的是 bash器
                          如果查看passwd文件，会发现里面很多用户的bash段的值为/etc/sbin/nologin,
                          表明该用户没有权限使用(登录到)任何bash，类似的值还有/bin/false,
                          两者功能相同，区别是前者在登录时会提示无法登录，后者只返回一个错误状态。
                          附加：当管理员维护系统时，要禁止用户远程登录，可临时创建/etc/nologin文件，
                          这样当非管理员用户登录时，nologin中的文件内容将显示给试图登录的用户。
    2、/etc/shadow
        /etc/passwd 文件对任何用户均可读，为了增加系统的安全性，
        用户的口令通常用 shadow passwords 保护。/etc/shadow 只对 root 用户可读。
            /etc/shadow 文件中各字段的含义
            用户名                       用户的帐户名，与/etc/passwd中的用户名相对应
            口令                         用户的口令，是加过密的
            最后一次修改的时间           从 1970 年 1 月 1 日起，到用户最后一次更改口令的天数
            最小时间间隔                 从 1970 年 1 月 1 日起，到用户可以更改口令的天数
            最大时间间隔                 从 1970 年 1 月 1 日起，到必须更改口令的天数
            警告时间                     在口令过期之前多少天提醒用户更新
                                         该字段的默认值是 7，也就是说，距离密码有效期的第 7 天开始，
                                         每次登录系统都会向该账户发出 "修改密码" 的警告信息
            不活动时间                   在用户口令过期之后到禁用帐户的天数
                                         如果是 0，则代表密码过期后立即失效；
                                         如果是 -1，则代表密码永远不会失效
            失效时间                     从 1970 年 1 月 1 日起，到帐户被禁用的天数
                                         该字段表示，账号在此字段规定的时间之外，
                                         不论你的密码是否过期，都将无法使用
            标志                         保留位
    3、/etc/group
        将用户进行分组是 Linux 对用户进行管理及控制访问权限的一种手段。
        一个组中可以有多个管理员和多个普通成员，还可以设置一个组密码。
        一个组中可以有多个用户，一个用户也可以属于多个组。该文件对所有用户可读。
            /etc/group 文件中各字段的含义
            组名      组的名称
            组口令    用户组的口令，用 x 表示
            GID       组的识别号
            组成员    该组的成员
                      该字段显示的用户都是这个用户组的附加用户，
                      如果该用户组是这个用户的初始组，则隐式包含该用户
                      如果要查询这些用户的初始组，
                      则需要先到 /etc/passwd 文件中查看 GID（第四个字段），
                      然后到 /etc/group 文件中比对组名。
                      通常用户的初始组就是在建立用户的同时建立的和用户名相同的组
        组密码的用处：
            用户组密码主要是用来指定组管理员的，由于系统中的账号可能会非常多，
            root 用户可能没有时间进行用户的组调整，这时可以给用户组指定组管理员，
            如果有用户需要加入或退出某用户组，可以由该组的组管理员替代 root 进行管理。
            但是这项功能目前很少使用，我们也很少设置组密码。
            如果需要赋予某用户调整某个用户组的权限，则可以使用 sudo 命令代替。
    4、/etc/gshadow
        该文件用于定义用户组口令、组管理员等信息，该文件只有 root用户可读。
            /etc/gshadow 文件中各字段的含义
            组名               组的名称
            组口令             用户组的口令，保存已加密的口令
                               通常不设置组密码，因此该字段常为空，但有时为 "!"，
                               指的是该群组没有组密码，也不设有群组管理员
            组的管理员帐号     组的管理员帐号，管理员有权对该组添加、删除帐号
                               由于目前有 sudo 之类的工具，
                               因此群组管理员的这个功能已经很少使用了
            组成员             该组的成员，多个用户用‘，’分开
                               和 /etc/group 文件中附加组显示内容相同
    5. /etc/login.defs                          
        用于在创建用户时，对用户的一些基本属性做默认设置，
        例如指定用户 UID 和 GID 的范围，用户的过期时间，密码的最大长度，等等
        当此文件中的配置与 /etc/passwd 和 /etc/shadow 文件中的用户信息有冲突时，
        系统会以/etc/passwd 和 /etc/shadow 为准。
        各项的含义参考： http://c.biancheng.net/view/3059.html
                               
                               
        