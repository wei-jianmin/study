1. 在makefile中使用for语句，如 for f in `ls ./`; do echo $f; done ,这样写是不行的，因为 echo $f 会在交给 bash 处理前，makefile会把$f展开，
   所以正确的写法是：for f in `ls ./`; do echo $$f; done 
2. makefile 如果没有规则生成.o文件，则会自动默认生成
   如：
   a.lib : %.o a/%.o
	ar rus $@ $^
   会自动查找当前目录和a目录下的.o文件，并看makefile中有没有规则生成这些.o文件，如果有，则使用相应规则生成，如果没有，则使用默认规则生成
   使用默认规则时生成时，可通过CC、CXX宏控制使用什么编译命令来编译.c、.cpp文件，并通过CFLAGS、CXXFLAGS控制编译选项
3. makefile 变量赋值方法有 = 和 := 两种
   = 赋值方法，会把整个makefile过一遍后，把值中的变量替换为最后的值，然后在赋给=前面的变量
   := 赋值是立即赋值，即把值中变量的当前值赋给:=前面的变量
   如：
   a=3
   b=$a
   c:=$a
   a=5
   执行完后，b的值是5,c的值是3
