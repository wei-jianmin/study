自旋锁
            简言之，自旋锁是相对于阻塞锁而言的，阻塞锁会引起线程的
            挂起与恢复，而这会引起内核态和用户态之间的切换，消耗不必要的时间
            自旋锁说白了就是 while( lock.try_lock() );
            当然这只是自旋锁的最简单应用情形，但可以说明自旋锁的特点了：
            自旋锁在得不到锁时，在本线程内循环等待，空等而不是阻塞，
            如果预料线程可能需要很长时间才能拿到这个锁，那自旋锁的线程
            空等的时间就会很长，超过线程挂起恢复的时间时，那使用阻塞锁
            就是比较划算的，而如果预料某个临界资源能很快得到锁，那自旋锁
            就是比较划算的选择，当然如下面那样的简单自旋锁有个很大的缺点，
            就是这是一种抢占式的锁，即当多个线程都在自旋等待时，不确定
            那个线程最终会抢到锁，从而可能导致某个线程一直抢不到锁，
            针对这种情形，可以将上面的自旋锁代码进行改进，得到有序自旋锁