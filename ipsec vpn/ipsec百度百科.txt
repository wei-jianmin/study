IPSec是IETF（Internet Engineering Task Force，即国际互联网工程技术小组）提出的
使用密码学保护IP层通信的安全保密架构，是一个协议簇，（只是协议，不是具体的代码实现）
通过对IP协议的分组进行加密和认证来保护IP协议的网络传输协议簇

IPSec可以实现以下4项功能:
①数据机密性：IPSec发送方将包加密后再通过网络发送。
②数据完整性：IPSec可以验证IPSec发送方发送的包，以确保数据传输时没有被改变。
③数据认证：IPSec接受方能够鉴别IPsec包的发送起源。此服务依赖数据的完整性。
④反重放:IPSec接受方能检查并拒绝重放包

IPSec主要由以下协议组成：
一、认证头（AH），为IP数据报提供无连接数据完整性、消息认证以及防重放攻击保护；
二、封装安全载荷（ESP），提供机密性、数据源认证、无连接完整性、防重放和有限的传输流（traffic-flow）机密性；
三、安全关联（SA），提供算法和数据包，提供AH、ESP操作所需的参数。
四、密钥协议（IKE），提供对称密码的钥匙的生存和交换。

IPSec协议是一个标准的网络安全协议,也是一个开放标准的网络架构,通过加密以确保网络的安全通信。
IPSec的作用主要包括确保IP数据安全以及抵抗网络攻击

IPSec被设计用来提供
    （1）入口对入口通信安全，
        在此机制下，分组通信的安全性由单个节点提供给多台机器（甚至可以是整个局域网）；
    （2）端到端分组通信安全，
        由作为端点的计算机完成安全操作。
    上述的任意一种模式都可以用来构建虚拟专用网（VPN），而这也是IPSec最主要的用途之一。
    应该注意的是，上述两种操作模式在安全的实现方面有着很大差别。

IPSec协议工作在OSI模型的第三层，使其在单独使用时适于保护基于TCP或UDP的协议
（如安全套接子层（SSL）就不能保护UDP层的通信流）
这就意味着，与传输层或更高层的协议相比，
IPSec协议必须处理可靠性和分片的问题，这同时也增加了它的复杂性和处理开销
相对而言，SSL/TLS依靠更高层的TCP（OSI的第四层）来管理可靠性和分片

技术细节
    认证头（AH）
        认证头（Authentication Header，AH）被用来保证被传输分组的完整性和可靠性。此外，它还保护不受重放攻击。
        认证头试图保护IP数据报的所有字段，那些在传输IP分组的过程中要发生变化的字段就只能被排除在外。
        当认证头使用非对称数字签名算法（如RSA）时，可以提供不可否认性（RFC 1826）。
        认证头分组结构：
            标识被传输数据所属的协议（1字节）+认证头包的大小（1字节）+保留（2字节）+
            安全索引索引，与IP地址一同用来标识安全参数（4字节）+
            串行号，单调递增的数值，用来防止重放攻击（4字节）+
            认证数据：包含了认证当前包所必须的数据（可变长度）
    封装安全载荷（ESP）
        封装安全载荷（Encapsulating Security Payload，ESP）协议对分组提供了源可靠性、完整性和保密性的支持。
        与AH头不同的是，IP分组头部不被包括在内。
        ESP分组结构：
            安全参数索引--与IP地址一同用来标识安全参数（4字节）+
            串行号--单调递增的数值，用来防止重放攻击（4字节）+
            载荷数据--实际要传输的数据（可变长度）+
            填充--某些块加密算法用此将数据填充至块的长度（0~255字节）+
            填充长度--以位为单位的填充数据的长度（1字节）+
            下一个头--标识被传送数据所属的协议（1字节）+
            认证数据--包含了认证当前包所必须的（可变长度）
    安全关联 SA
        记录每条 IP安全通路的策略和策略参数
        安全关联是 IPSec 的基础, 是通信双方建立的一种协定,决定了用来保护数据包的协议、转码方式、密钥以及密钥有效期等。
        AH和 ESP都要用到安全关联,IKE的一个主要功能就是建立和维护安全关联。
    密钥管理协议 IKE
        密钥管理协议 ISAKMP, 提供共享安全信息。
        Internet密钥管理协议被定义在应用层,IETF规定了Internet安全协议和互联网安全关联和秘钥管理协议ISAKMP
        (Internet Security Association and Key Management Protocol) 
        来实现 IPSec 的密钥管理,为身份认证的 SA 设置以及密钥交换技术
        IKE是一种混合型协议，由RFC2409定义，包含了3个不同协议的有关部分：ISAKMP、Oakley和SKEME。
        IKE和ISAKMP的不同之处在于：IKE真正定义了一个密钥交换的过程，
        而ISAKMP只是定义了一个通用的可以被任何密钥交换协议使用的框架
        Oakley：定义IKE提供了一个多样化，多模式的应用，让IKE可以用在很多场合，大学开发的
        SKEME：提供了IKE交换密钥的算法，方式；即，通过DH进行密钥交换和管理的方式，个人开发的
        ISAKMP：它是一个框架，在该框架以内，它定义了每一次交换的包结构，每次需要几个包交换，
        主模式6个包交换和主动模式3个包交换，
        它由美国国家安全处开发，在配置IPSEC VPN的时候，只能设置它，前两个协议不能被设置
        ISAKMP没有定义任何密钥交换协议的细节，也没有定义任何具体的加密算法、密钥生成技术或者认证机制。
        这个通用的框架是与密钥交换独立的，可以被不同的密钥交换协议使用。
        ISAKMP双方交换的内容称为载荷（payload），ISAKMP目前定义了13种载荷，
        一个载荷就像积木中的一个“小方块”，这些载荷按照某种规则“叠放”在一起，
        然后在最前面添加上ISAKMP头部，这样就组成了一个ISAKMP报文，
        这些报文按照一定的模式进行交换，从而完成SA的协商、修改和删除等功能
        
实现
    FreeS/WAN项目已经开发了一个开源的GNU/Linux环境下的IPSec实现
    且一个基于KAME项目的IPSec实现已经包含在NetBSD、FreeBSD以及2.6Linux内核中
    从某种程度上说，也是因为这个原因，Free S/WAN项目的开发在2004年3月时被中止
    Openswan和strongSwan是Free S/WAN延续
    
相关RFC文档
    RFC 2401    IP协议的安全架构
    RFC 2402    认证头
    RFC 2406    封装安全载荷
    RFC 2407    ISAKMP的IPSec解释域（IPSec DoI）
    RFC 2408    网络安全关系与密钥管理协议（ISAKMP）
    RFC 2409    因特网密钥交换（IKE）    
    
安全结构
    
    