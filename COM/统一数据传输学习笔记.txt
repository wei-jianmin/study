9.1 统一数据传输基础
早起OLE1.0版本，使用的是DDE（dynamic data exchange）作为数据交换标准，但DDE格式比较简单，且只能用全局内存作为存储介质。
后来的OLE版本引入了COM作为其基本结构模型，使用COM提供的统一数据传输作为其数据交换的机制。

在不同应用直接进行数据传输，包括两方面的内容：数据格式的统一&传输协议的建立。
在数据格式方面，DDE方式只能使用有限的几种事先约定好的数据格式。而统一数据传输机制，传输的是一个“数据对象”，而各种形式的数据都可以封装在数据对象中进行传输，（数据对象通过IDataObject接口暴露其内部信息），因此只要传输一个数据对象的接口指针就可以以不变应万变。
传输协议就是指通过什么方式、什么手段完成信息数据的传递。最基本的协议有剪切板协议和拖放协议，此外也可以通过发消息等手段完成数据的传递。
与数据格式相比，数据格式关心的是一整块数据内部是如何表达信息的；而传输协议则关心的是怎么把这一整块数据从一方传给另一方；但两者有是有机结合的，被数据格式规范了的数据通过数据协议进行传输，两者抛开其中一方谈另一方是没有意义的。

传统的数据传输和统一数据传输的优劣对比：
传统的数据传输手段，如通过剪切板传输数据，把传入协议和数据格式都统一封装在几个函数中，所以没法适应新的传输协议或自定的数据格式，而统一数据传输方式，通过数据对象，把要传输的格式数据（以及存储介质）和要传输数据对象所使用的协议在逻辑上分成了两个部分，传输协议在底层，而数据格式则在其上一层，这种结构决定了统一数据传输方式能够支持扩充传输协议。

统一数据传输在应用程序之间进行vs在com组件之间进行：
前者表达的是，两个应用程序要相互传输数据时，可以建立一个数据对象，把要传输的数据封装到该数据对象中，然后进行传输；
后者表达的是，两个com组件要相互传输数据时，传送方可以直接把自己变成数据对象，然后让对方访问自己，从而完成数据传输；

----------------------------------------------------
9.2 数据传输机制
统一数据传输的核心是数据对象（实现了IDataObject接口的对象）
IDataObject接口方法会使用到两种结构体：FORMATETC和STGMEDIUM
FORMATETC的数据成员有：
  WORD cfFormat;	   剪切板数据格式，前缀为 CF_
{                                  内嵌结构体
  DWORD  tdSize;
  WORD     tdDriverNameOffset;
  WORD     tdDeviceNameOffset;
  WORD     tdPortNameOffset;
  WORD     tdExtDevmodeOffset;
  BYTE        tdData[1];
}       *        ptd;             注意是指针类型，指明了数据是为什么目标设备而压缩的
  DWORD  dwAspect;   只在传输图形时有用，
  LONG      lindex;         只在传输图形时有用，
  DWORD  tymed;




