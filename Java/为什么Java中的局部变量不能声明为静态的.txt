考虑c++中的情况：
c++是允许出现函数级局部变量的，但函数局部静态变量，与类静态成员变量的生命周期是不同的：
类静态变量可以认为是全局变量，他存在于程序的整个生命周期，
但函数局部静态变量是函数被执行到后，这个静态变量才第一次真正被定义，之后持续到程序结束。

Java如果要同c++一样指出函数静态局部变量，则怎么定义其生命周期是个问题，
是跟c++一样呢？还是跟类成员变量一样在程序一开始就完成定义呢？
如果是选择后者，那么要支持函数静态局部变量似乎不麻烦，可问题是，一些静态函数可能定义了，
但并不一定会被调用到，这样的静态函数，如果里面有静态局部变量的话，就会有一些无用的静态变量被定义出来。
如果选择前者，。。。？

另外，c++的函数静态局部变量，完全可以用静态类成员变量替代，而且在Java中使用类静态成员变量，比c++中方便很多，
这是Java能放心的把函数静态局部变量这一功能放心大胆的删除的根本原因。