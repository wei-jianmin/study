MVC开始是存在于桌面程序中的，
M是指业务模型，V是指用户界面，C则是控制器，
使用MVC的目的是将M和V的实现代码分离，
从而使同一个程序可以使用不同的表现形式。
比如一批统计数据可以分别用柱状图、饼图来表示。
C存在的目的则是确保M和V的同步，一旦M改变，V应该同步更新。

在MVC的三个部件中，模型拥有最多的处理任务。被模型返回的数据是中立的，
模型与数据格式无关，这样一个模型能为多个视图提供数据，
由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。
模型表示企业数据和业务规则。
例如它可能用象EJBs和ColdFusion Components这样的构件对象来处理数据库。
被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据。

V即View视图是指用户看到并与之交互的界面。
比如由html元素组成的网页界面，或者软件的客户端界面。
MVC的好处之一在于它能为应用程序处理很多不同的视图。
在视图中其实没有真正的处理发生，它只是作为一种输出数据并允许用户操作的方式。

C即controller控制器是指控制器接受用户的输入并调用模型和视图去完成用户的需求，
控制器本身不输出任何东西和做任何处理。
它只是接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示返回的数据。

最典型的MVC就是JSP + servlet + javabean的模式 
    在这种模式下，jsp负责数据显示与收集，
    servlet负责处理用户请求：验证数据、实例化JavaBean、调用DAO连接数据库、控制页面跳转，
    javabean负责封装数据,方便将查询结果在servlet与jsp页面之间进行传递等。
    模式运行流程：
        用户首先打开一个JSP页面，这个JSP页面用于收集用户输入的数据（使用Form表单实现），
        当用户单击提交按钮时，此JSP页面被提交到对应的Servlet，此时工作转向Servlet。
        Servlet将提交到的数据进行处理，处理过程如下：
            1、(可选)对数据进行合法性验证、乱码处理等
            2. 实例化DAO，调用DAO的方法（进行数据库数据的更新查询操作）
            3. 将DAO返回的数据进行保存，保存的位置可选（request,session等）
            4. 进行页面的跳转
        在Servlet调用DAO的方法过程中，DAO的处理过程如下：
            1. 连接数据库（这些操作可以放在DAO的构造函数当中，也可以写成单独的方法）
            2. 处理查询方法，这里给出基本步骤。
               先按查询语句及传过来的参数进行数据库的查询得到一个ResultSet结果集，
               为了方便将结果返回给Servlet及方便后面的显示，
               现将结果进行封装并以ArraryLis或者JSON串,xml串等等t的形式返回给servlet。
               为了进行数据的封装，这里就需要实例化一个JavaBean，
               这个JavaBean的字段与数据库表当中的字段一一对应，并为各个字段添加get(),set()方法。
        Serlvet在得到数据后，再将页面进行跳转，此时数据已保存下来。
        我们可以在另外一个JSP页面当中将数据提取出来，并按一定的格式进行排列。
        至此，一个完整的查询操作就完成了。
    相关参考：
        file://JavaBean.txt
        file://serverlet.txt
        file://什么是jsp.txt
    
