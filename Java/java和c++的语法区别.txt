● main函数返回值：
  java返回void
  c++返回int
  
● 变量命名：
  java可以使用字母、数字、下划线、$符号
  c++可以使用字母、数字、下划线
  
● java不支持运算符重载

● java中没有指针

● java不支持逗号运算符

● java中的字符类型占2个字节，使用unicode编码

● java中的基本变量类型，声明即定义，即如果变量没指定初始值，则会赋相应的默认值（0或false）

● 数组的声明
  java在声明数组时，不指定数组的长度（数组在java中属引用类型，数组中存放的不是数据元素的实体，而是数据元素的存放位置）
  c++在声明数组时，需要指明数组的长度
  
● 引用类型
  java的引用不同于c++的引用，Java的引用更像是指针，它是占用空间的，Java的引用甚至可以赋值为null，Java中，对象、接口、数组均为引用类型
  c++的引用只是个代名词，不占用空间
  
● 对象比较
  Java中，==用于判断两个对象的内存地址是否相同，equals方法比较两个对象的内容是否一致。
  c++中，==比较的是对象的对象的内容，并可重载==方法

● 静态变量、静态方法、静态代码块
  Java，可用"类名.静态成员方法/变量"调用
  c++，用"类名::静态成员方法/变量"调用
  Java中不能将函数局部变量声明为静态变量
  Java中的类静态变量直接在类中赋值
  Java中有静态代码块，这是c++中没有的概念
  Java中调用顺序：静态类成员变量 > 静态代码块 > main	（符合先定义，后执行规律）
  Java中通过类调用静态方法（或使用静态变量）时，其中的静态对象会自动创建，静态代码块也会自动执行
  Java中调用类的静态常量的时候，是不会加载静态代码块的（编译期处理）
  Java中当一个类中有多个static{}的时候，按照static{}的定义顺序，从前往后执行；
  
● 类成员变量的初始化
  Java中的类成员变量可以在类中直接初始化赋值，c++ 不能
  
● 内部类
  Java中，在函数中也可以声明内部类，C++中不能
  
● 公共类
  Java中，一个文件中只能有一个公共类，且该公共类必须与文件名完全一致
  
● 类继承
  Java继承的语法为 class 子类 extends 父类，继承时不分公有继承还是私有继承，而且java中只允许继承一个父类
  C++继承语法为class 子类：public/protect/private 父类