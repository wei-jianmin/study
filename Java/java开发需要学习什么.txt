1.java基础
2.JSP+Servlet+JavaBean 这个环节主要是懂流程的
什么是MVC而已 别往深了研究 现在开发基本不用这个模式
3.Struts+Hibernate+Spring
这个才是开发的主流技术 把每个都搞清楚 哪个框架是什么层的
4.Ajax（最好学学 很多公司都注重这个）
然后用3+4 做个例子 不是要实现功能 关键是要你知道什么时候
该用什么 流程是怎样的 面试会问及这些 
如何学习 Java的问题，“我已经学习了J2SE，怎么样才能转向J2EE？”，“我看完了Thinking in Java， 可以学习J2EE了么？”。于是就有了写这篇文章的想法，希望能帮助初学者少走一些弯路。也算是对自己几年来学习Java的一个总结吧。 
在开始之前有必要再讨论一下J2ME，J2SE，J2EE这些概念。
J2ME，The Micro Edition of the Java 2 Platform。主要用于嵌入式Java，如手机，PDA等等。
J2SE，Java 2 Platform，Standard Edition，我们通常所说的JDK(Java Development Kit)包含在此，是J2EE的基础。J2EE，Java 2 Platform，Enterprise Edition，就是所谓的企业级Java。
这些只是从API级别上的划分，实际上Sun给J2EE的定义是:开发基于组件的多层的企业级应用的规范。也就是为各种不同的技术定义一个Java的规范，使这些不同的技术结合起来，在Java平台上构建强壮的企业级应用。从这一点来看，J2EE这个概念应该是涵盖J2ME，J2SE的。比如一个典型的J2EE应用，网上商店，它支持web方式下订单，也支持手机下订单。显然必须用到J2SE，J2ME。所以也就不存在所谓的从J2SE转向J2EE的问题了，只是后者包含的范围更广而已。 
来看看Sun给出的J2EE 相关技术主要分为几大块。 
1. Web Service技术 
-  Java API for XML Processing (JAXP) 
-  Java API for XML Registries (JAXR) 
-  Java API for XML-based RPC (JAX-RPC) 
-    SOAP with Attachments API for Java (SAAJ) 
2. 组件模型技术（Component Model Technologies） 
-  Java Servlet 
-  JavaServer Pages 
-  JavaServer Faces 
-  Enterprise JavaBeans 
-  Java Message Service 
-    J2EE Connector Architecture 
3. 管理技术(Management Technologies) 
-  J2EE Deployment Specification 
-  J2EE Management Specification 
-  J2EE Client Provisioning 
-    Java Authorization Contract for Containers 
4. 其他相关技术(Other J2EE Technologies) 
-  JDBC 
-  Java Data Objects (JDO) 
-  CORBA (Java IDL and Java RMI-IIOP) 
-  JavaMail 
-  Transactions 
如此之多的技术难免使初学者无所适从，望而却步。即使是一位经验丰富的J2EE开发者，又有几个人敢说J2EE相关的技术我都熟练掌握了。不过作为一名普通J2EE应用程序的开发者来说，我们只需要重点学习其中的一部分技术就可以了，对于其他部分只要做到心中有数，哪天需要用到了知道跑哪里去找到资料就行了。以我个人的观点，下面这些技术是一般J2EE应用开发人员所必须熟练掌握的。Java Server Page，Java Servlet，Enterprise JavaBean，JDBC，Transactions。还有JAXP等XML相关技术，Java Message Service，Java Mail，JDO等等是最好应该掌握的。其他Management Technologies，Connector Architecture等等主要是给容器提供商中间件提供商参考的，应用开发者不需要怎么关心，等用到了再去学习也不迟。 、、
Java发展到现在，按应用来分主要分为三大块:J2SE,J2ME和J2EE。这三块相互补充，应用范围不同。
J2SE就是Java2的标准版，主要用于桌面应用软件的编程；
J2ME主要应用于嵌入是系统开发，如手机和PDA的编程；
J2EE是Java2的企业版，主要用于分布式的网络程序的开发，如电子商务网站和ERP系统。
先学习j2se
要学习j2ee就要先学习j2se，刚开始学习j2se先建议不要使用IDE，然后渐渐的过渡到使用IDE开发，毕竟用它方便嘛。学习j2se推荐两本书，《java2核心技术一二卷》，《java编程思想》，《java模式》。其中《java编程思想》要研读，精读。这一段时间是基本功学习，时间会很长，也可能很短，这要看学习者自身水平而定。
不要被IDE纠缠
在学习java和j2ee过程中，你会遇到五花八门的IDE，不要被他们迷惑，学JAVA的时候，要学语言本身的东西，不要太在意IDE的附加功能，JAVA编程在不同IDE之间的转换是很容易的，过于的在意IDE的功能反而容易耽误对语言本身的理解。目前流行的IDE有jbuilder，eclipse和eclipse的加强版WSAD。用好其中一个就可以了，推荐从eclipse入手j2ee。因为Jbuilder更适合于写j2se程序。
选择和学习服务器使用配置
当你有了j2se和IDE的经验时，可以开始j2ee的学习了，web服务器:tomcat，勿庸置疑，tomcat为学习web服务首选。而应用服务器目前主要有三个:jboss、weblogic、websphere。有很多项目开始采用jboss，并且有大量的公司开始做websphere或weblogic向jboss应用服务器的移植（节省成本），这里要说的是，学习tomcat和jboss我认为是首选，也是最容易上手的。学习服务器使用配置最好去询问有经验的人（有条件的话），因为他们或许一句话就能解决问题，你自己上网摸索可能要一两天（我就干过这种傻事），我们应该把主要时间放在学习原理和理论上，一项特定技术的使用永远代替不了一个人的知识和学问。
学习web知识
如果你是在做电子商务网站等时，你可能要充当几个角色，这是你还要学习:
html，可能要用到dreamwave等IDE。
Javascript，学会简单的数据校验，数据联动显示等等
J2eeAPI学习
学习j2eeAPI和学习服务器应该是一个迭代的过程。
先学习jsp和servlet编程，这方面的书很多，我建立看oreilly公司的两本《jsp设计》和《java servlet编程》，oreilly出的书总是那本优秀，不得不佩服。
学习jdbc数据库编程，j2ee项目大多都是MIS系统，访问数据库是核心。这本应属于j2se学习中，这里拿出来强调一下。
学习jndi api，它和学习ejb可以结合起来。
学习ejb api，推荐书《精通ejb》
经过上面的这些的学习，大概可以对付一般的应用了。
有人说跟着sun公司的《j2ee tutorial》一路学下来，当然也可以。
学习ejb设计模式和看代码（最重要）
设计模式是练内功，其重要性可以这么说吧，如果你不会用设计模式的话，你将写出一堆使用了ejb的垃圾，有慢又是一堆bug，其结果不如不用ejb实现（ejb不等于j2ee）
无论学习什么语言，都应该看大量代码，你看的代码量不到一定数量，是学不好j2ee的
目前有很多开源的工程可以作为教材:
jive论坛
petstore sun公司
dune sun公司
等等，研读一个，并把它用到自己的工程中来。
J2ee其他学习
当你渐渐对j2ee了解到一定深度时，你要开始关注当前领域中的一些技术变化，J2ee是一块百家争鸣的领域，大家都在这里提出自己的解决方案，例如structs，hiberate，ofbiz等等，学习这些东西要你的项目和目标而定，预先补充一下未尝不可，但不用涉及太深，毕竟学习原理和理论是最最重要的事。
目前常见j2eeAPI
JavaServer Pages(JSP)技术1.2
Java Servlet技术2.3
JDBC API 2.0
Java XML处理API(JAXP)1.1
Enterprise JavaBeans技术2.0
Java消息服务(JMS)1.0
Java命名目录接口(JNDI)1.2
Java事务API(JTA) 1.0
JavaMail API 1.2
JavaBeans激活架构(JAF)1.0
J2EE连接器体系结构(JCA)1.0
Java认证和授权服务(JAAS)1.0
学习上面的某些API要以你的项目而定，了解所有他们总之是有好处的
上面印证了大家说的一句话，java语言本身不难学，但是技术太多，所以学java很费劲。回想一下，基本上每个初学者，在刚学习java的时候可能都会问别人这么一句话，你怎么知道的哪个方法(api)在哪个包里的？呵呵，无他，唯手熟尔。
----------------------------------------------------
java开发需要学习的内容有：
初级部分
Java OO程序设计基础，包括 J2sdk基础、Java面向对象基础、Java API使用、数据结构及算法基础、Java AWT图形界面程序开发；
J2SE平台Java程序设计，包括Swing图形程序设计, Socket网络应用程序设计,对象序列化，Java 常用数据结构，Applet，流和文件，多线程程序设计；
Java桌面系统项目开发，4~5人组成一个项目组，项目大小为（15人*工作日）；
Linux的基本操作，Linux下的Java程序开发，Linux系统的简单管理；
Oracle数据库，包括SQL/PLSQL;数据库和数据库设计；简单掌握ORACLE9i 数据库的管理；
中级部分
Java Web应用编程，包括 Java Oracle 编程，即JDBC；Java Web编程，包括JSP、Servlet,JavaBean；Java应用编程，包括Weblogic、Websphere、Tomcat；以及利用Jbuilder开发Java程序；
MVC与Struts，学习业界通用的MVC设计模式和Struts架构；
Java B/S商务项目开发，4~5人一个项目组，项目大小为（25人*工作日左右）
高级部分
J2ME程序设计，包括J2EE程序、J2ME；Java高级程序设计（J2EE），包括J2EE体系结构和J2EE技术、EJB；Weblogic使用、 JBuilder开发；
Java和XML，包括Java Web Service，Java XML, 业界主流XML解析器程序设计；
软件企业规范和软件工程，包括UML系统建模型和设计(Rational Rose 200x)软件工程和业界开发规范；CVS版本控制、Java Code书写规范；
J2EE商务应用系统项目开发，4~5人一个项目组，项目大小为（25人*工作日左右）
……………………………………………………………………………………………………
看你问的问题，应该是对java很感兴趣，其实你可以自学java。关于如何学习java，我刚才看到一篇很不错的文章，是一个农民工介绍自己如何自学java，并找到Java的工作，里面介绍了他的学习方法和学习过程，希望对你有帮助。
我是一名地地道道的农民工，生活在经济落后的农村，有一个哥哥和一个弟弟，父母都是地道的农民，日出而作，日落而息，我从小到大学习一直很好，从小学到高一都，成绩在全级一直名列前茅，这样我也顺利了考上省的重点高中，然而，每个学期开学是家里最为难的时候，每次交学费都让父母发愁许久，家里为了给我筹钱读书，都借了不少钱，才让我读上高中。我知道我读到高中家里已经欠了好多债，为了减轻家里的负担，我选择了退学。
2009年我高一退学，为了给家里还债，干过建筑工地的小工，搞过塑料制品加工，送水工等等。很工资都很低，一个月也就1000多，加上加班费一个月能拿2000多一点，我每个月都向家里寄回800-1000元，到了2011年末，一次偶然的机会我接触了Java，听说Java的前景挺不错，工资相对于我一个农民工来说简直是天文数字，于是我在新华书店买了几本Java的书，尽管白天辛苦工作，晚上回来还是坚持看书，但有于基础太差很多都很不明白，但还是坚持看，一有看1-2个小时Java的书，看着看着许多基础都慢慢的学会了，但那些比较难的还是看不懂，后来还买了有些关于框架的书，还是看不懂，这样断断续续的持续了半年多，觉得自己Java的基础都差不多懂了，但框架还是看不懂，还有最缺的项目经验，看了很多招聘Java程序员的简介都要项目经验，相对我一个农民工来连框架都弄不明白，想找一份Java工作对我来说简直是奢侈。我只想学Java，并不敢想以后能从事Java的工作。
有一次，在百度上看到一篇让我很鼓舞的文章，是一个Java高手介绍在没有基础的朋友怎么自学入门Java，文章写的很好，包含了如何学习，该怎么学习，他提到一个方法就是看视频，因为看书实在太枯燥和费解的，不少是我们也看不懂，这点我真的很认同，我自己看书都看了很久才学会基础。曾经有想过参加培训，但是上万元的培训费让我望而却步，我工资这么低，每个月还有向家里汇钱，加上城市消费比较高，虽然每个月只有几百剩下，但是相对于上万万学费和四个月的吃住费用逼我连想不敢想。 于是我决定看视频，我就去搜索Java的视频，虽然我零星的找到一些Java的视频，但是都不系统。最重要连项目都没有。后来我找到一份很好的视频，是IT学习联盟这个网站一套视频叫<<零基础Java就业班>>的教程还不错，很完整。还赠送11个顶级企业项目。价格很合理，于是我买下来。
于是开始了我的自学Java的路，收到光盘后，我就开始学习，刚开始学习还不错，是从零基础教起，老师幽默风趣而又轻松的课堂教课，使我发现原来学习JAVA并不是一件很难的事情。因为我本来基础还不错，前面的基础看一篇我就过去了，到了框架，我觉不又不是很难，可能老师太牛了，他能把复杂的问题讲的比较通俗易懂，有些难点的地方我还是连续看了五六次，把他弄懂。每天下午6点下班后，吃了饭，马上跑回家。看视频，买了几本笔记本。当时，为了编程还花几百元了台二手的台式电脑，配置一般，但编程是足够的。一边看视频，一边记笔记，把重点都记下来，还一边跟着老师敲代码，为了能尽早学会Java。每天都坚持学5-6个小时。经常学到晚上一点多才睡觉。星期六，日不用上班，每天7点多起床，学到晚上11,12点。那段时间特别辛苦，特别累。在学习Java的三个多月里，除了吃饭睡觉工作，剩余的时间都在学习，因为我知道自己的计算机基础不是很好，也没有学过什么计算机，只是学了些Java基础，相对于那些科班的人来说我要比他们付出更多的努力。我只能咬紧牙关，坚持下去，我不能放弃，我要完成我的梦想，我要让我的家人过上好日子。终于三个多月后我把Java教程里的内容和项目都学完了，在学项目的过程中我发现项目特别重要，他能把你学过的知识全部联系起来，能更好的理解你所学的知识。还有学习过程中，动手很重要，要经常跟着老师动手敲，动手吧，跟着做，一行一行的跟着敲，再试着加一些自己的功能，按照自己的思路敲一些代码，收获远比干听大的多。 如果遇到暂时对于一些思路不能理解的，动手写，先写代码，慢慢你就会懂了。这套视频还赠送了11个顶级企业项目，对于我没有任何经验的人来说，这个太重要了，还有在学习项目是提升能力最快的方法。项目能把所有的知识点全都连到一起了，不再是分散的，而是形成一个整体了。那种感觉是仅仅深入钻研知识点而不写真实项目的人所不能体会的。一个项目就是一根绳子可以把大片的知识串到一起。 就这样，我用了两个月也把项目给学完了。其实学完教程差不错就达到就业水平，但是我可能觉得自己学历低还是把那11个顶级企业项目才去找工作。
接着我就到51job疯狂的投简历，因为我的学历问题，初中毕业，说真的，大公司没有人会要我。所以我头的都是民营的小公司，我希望自己的努力有所回报。没有想过几天后，就有面试了，但是第一次面试我失败了，虽然我自认为笔试很好，因为我之前做了准备，但是他们的要求比价严格，需要有一年的项目经验，所以我没有被选中。 后来陆续面试了几加公司，终于功夫不负有心人，我终于面试上了一家民营的企业。公司规模比较小，我的职务是Java程序员。我想我比较幸运，经理看中我的努力，就决定吕勇我，开的工资是3500一个月，虽然我知道在北京3500只能过温饱的生化，但是我想我足够了，比起以前的工资好了些，以后可以多寄些钱回家。我想只要我继续努力。我工资一定会翻倍的。 把本文写出来，希望能让和我一样的没有基础的朋友有信心，其实我们没有自卑，我们不比别人笨，只有我们肯努力，我们一样会成功。