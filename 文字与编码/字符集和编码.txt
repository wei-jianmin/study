● Unicode字符集：
即Unicode所能表示的字符的集合及其码位，
如中文，韩文、日文、英文、泰文等是在Unicode字符集内的，但像如个别的少数民族的语言是没有包含在Unicode字符集中的。
指定字符集就是指定一张文字表，哪个文字在表中的哪个位置，例如“知”在表中第30693这个位置，"a"在表中的第97个位置等。
由权威机构对字符进行编码而形成的编码集合叫做字符集。例如：中国国家标准GB2312就是简体中文字符集；台湾计算机界使用的BIG5码是繁体字中文字符集；日本的JIS X0208标准是日文汉字字符集；韩国的KS C5601是韩国汉字字符集。

ANSI（美国国家标准学会）推出了一种双字节编码的标准，将上述四个的字符集加以统一，称为 ANSI 编码。在简体中文操作系统中，ANSI 编码代表 GBK 编码；在日文操作系统中，ANSI 编码代表 Shift_JIS 编码。 不同 ANSI 编码之间互不兼容，在国际间信息交流时，无法将属于两种语言的文字，存储在同一段 ANSI 编码的文本中，没有解决不同字符集的兼容问题。Unicode（万国码、统一码、单一码）则给世界各种语言的每个字符提供了一个唯一的数字，使信息字符能够贯穿多个平台，语言和国家。

● 狭义的Unicode
这是微软带的坏头。微软把 UTF-16 称作 Unicode，因为早期的 UTF-16 编码单元可以和字位一一对应，不过现在已经不行了，早期的Unicode只收录了6万左右的文字，所以可以用两个字节表示的过来，现在的Unicode已经收录了9万多文字了，所以，utf-16也要通过变长来支持了，与utf-8不同的是，utf-16以双字节位单位来变长。
所以utf-16要么是两字节，两字节表示不过来后，就要用四字节来表示。

● 字符编码
必须先有字符集，然后才能有字符编码（编成字节代码），字符集通过一张表完成文字到数字的转换，而字符编码制定了数字的存储规则。
如30693按utf-8编码，则：
U+ 0000 ~ U+ 007F: 0XXXXXXX
U+ 0080 ~ U+ 07FF: 110XXXXX 10XXXXXX
U+ 0800 ~ U+ FFFF: 1110XXXX 10XXXXXX 10XXXXXX
U+10000 ~ U+1FFFF: 11110XXX 10XXXXXX 10XXXXXX 10XXXXXX
根据上表中的编码规则，之前的「知」字的码位30693(0x77E5)属于第三行的范围：
    0111   011111   100101 二进制的 77E5
1110XXXX 10XXXXXX 10XXXXXX 模版（上表第三行）
11100111 10011111 10100101 代入模版后结果


● 关系
对于Unicode来说，字符集和编码是分开的，Unicode是字符集，遵从该字符集的编码有utf-8,utf-16,utf-32等
对于非Unicode来说，如gb3212，gb18030,则同时是字符集和编码，他们不但规定了字符的位置，还规定了在字节中怎么存储。所以可以称为编码字符集。
  



