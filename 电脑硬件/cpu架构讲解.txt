早期，因特尔自己搞了个x86架构，然后amd拿到了x86的授权，所以，那时候，无论inter，还是amd，生产的cpu都是x86架构的。
接着intel向64位过渡的时候自己搞了个ia64（x64架构）但是因为和x86架构不兼容市场反应极差，
amd率先搞了x86的64位兼容（32和64的混合架构）也就是后来的x86-64，
后来Intel也拿到了生产这货的授权（i和a两家专利交叉的很严重），也搞了x86-64，因为amd先搞出来的所以x86-64也叫amd64

IA-32架构属于复杂指令集，由英特尔公司开发，1985年，随着Intel 80386微处理器的上市，被公之于世。

英特尔也是世界上最大的IA-32芯片供应商，AMD则是第二大的供应商。

2011年，英特尔与AMD同时采用了新的x86-64架构，但是x86架构仍然被应用在如Intel Atom（N2xx与Z5xx系列）、AMD Geode等芯片上

后来intel又搞了个不兼容x86的ia64架构（x64架构），因无法原生支持32位软件，所以市场反应很差，最终流产

AMD自行把32位x86（或称为IA-32）拓展为64位，并命名为x86-64或Hammer架构，而后更名为AMD64架构，并曾禁止使用之前的名字来称呼这一架构[1]

由于AMD的64位处理器产品线首先进入市场，且微软也不愿意为英代尔代号为Yamhill的64位版x86处理器开发第三个不同的64位操作系统，
英代尔被迫采纳AMD64架构且增加某些新的扩展到他们自己的产品，命名为EM64T架构（显然他们不想承认这些指令集是来自它的主要对手），
EM64T后来被英代尔正式更名为Intel 64。

英特尔（intel），不是叫因特尔，在台湾之前因英特尔这个商标被别的公司注册，所以叫应代尔，但大陆和香港一直都叫英特尔，现在台湾也改名叫英特尔了。

再说x86，arm和mips这三个的区别和联系要从cpu早期说起，早期的cpu有两个设计思路，1是把cpu内的逻辑电路做的非常复杂，
这样可以直接用cpu硬件事先复杂指令，这个叫复杂指令集cisc；另一个思路是尽可能把cpu做的简单，依靠简单指令的组合迭代完成复杂指令，
这个叫精简指令集riscx86目前泛指x86和x86-64架构，这是因为x86-64完全兼容x86。早期的x86是cisc的代表，后来的发展中逐步引入了risc的部分理念，
将内部指令的实现大量模块化，准确来说是一个cisc外加risc部分技术的架构。目前x86的主要产品有Intel的至强，酷睿，奔腾，赛扬和凌动；amd的锐龙，apu等。
上文提到的x64架构目前只有intel 安腾而且已经放弃了产品线。到目前为止intel和amd的x86架构cpu虽然指令集上有很大差别了但是还是相互兼容的，
所以软件可以直接用。'再说arm。arm是risc的典型代表，不过在arm的发展过程中引入了部分复杂指令（完全没有复杂指令的话操作系统跑起来异常艰难），
所以是一个risc基础外加cisc技术的cpu。arm的主要专利技术在arm公司手中，像高通，三星，苹果这些公司需要拿到arm的授权。
另一个risc的典型处理器就是mips。mips是一个学院派的cpu，授权门槛极低，因此很多厂家都做mips或者mips衍生架构。

AMD抢跑了，比Intel率先制造出了商用的兼容x86的CPU，AMD称之为AMD64，抢了64位PC的第一桶金，得到了用户的认同。
Intel选择了设计一种不兼容x86的全新64为指令集，称之为IA-64（这玩意似乎就是安腾），但是比amd晚了一步，而且IA-64也挺惨淡的，
因为是全新设计的CPU，没有编译器，也不支持windows（微软把intel给忽悠了，承诺了会出安腾版windows server版，但是迟迟拿不出东西）。
后来不得不在时机落后的情况下也开始支持AMD64的指令集，但是换了个名字，叫x86_64，表示是x86指令集的64扩展，
大概是不愿意承认这玩意是AMD设计出来的。
实际上，x86_64,x64,AMD64基本上是同一个东西，我们现在用的intel/amd的桌面级CPU基本上都是x86_64，与之相对的arm,ppc等都不是x86_64。