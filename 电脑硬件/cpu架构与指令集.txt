cpu的架构指的是cpu的结构，是一堆硬件电路，去实现指令集所规定的操作运算，
所以，cpu架构与指令集是息息相关的，指令集就是硬件电路（架构）的功能描述。

但是要实现同样的指令集，可以有不同的硬件设计方式。
而某一确定的架构，原则上可以实现多种接口不同的接口指令，这些指令可以分属不同的指令集

但是不同的指令集一般都有不同的设计思想，典型的是精简指令集vs复杂指令集，
他们是思想上想矛盾的两个指令集，所以同一cpu架构，不太可能同时支持这两种指令集。

精简指令集(RISC)
    这种CPU设计中，微指令集较为精简，每个指令的运行时间都很短，完成的动作也很单纯，
    指令的执行性能较佳；若要做复杂的事情，就要由多个指令来完成，
    常见的RISC微指令集主要例如甲骨文公司的SPARC系统,
    BM公司的Power Architecture（包括PowerPC）系列，
    安谋公司（ARM Holdings）的ARM CPU系列等，
    MIPS是一种采取精简指令集（RISC）的处理器架构，既有指令集，也有相应的处理器架构
    顺便说一句，你所用到的各厂牌手机，
    PDA，导航系统，网络设备（交换器，路由器等）等，
    几乎都是使用的ARM的cpu
复杂指令集（CISC）
    与RISC不同的，CISC在微指令集的每个小指令可以执行一些较低级的硬件操作，
    指令数量多而且复杂，每条指令的长度并不相同，
    因为指令执行较为复杂所以每条指令花费的时间较长，
    但每条个别指令可以处理的工作较为丰富。
    常见的CISC微指令集CPU主要有AMD，
    Intel,VIA等的X86架构的CPU，
    在个人计算机上应用的非常普通，
    因此，X86计算机又被称为个人计算机，像X86_32,X86_64位计算机。
    
2009年6月15日，mips公司发布新闻，中国科学院计算所 取得MIPS32和MIPS64的授权，用于龙芯的开发和商用。


arm64 和 aarch64
    Armv8是Armv7之后的一个重要架构更新。其中一个主要的变化是引入了64的架构，即AArch64。
    AArch64状态只有在Armv8架构中才有。而且在AArch64状态下执行的代码只能使用A64指令集
    Armv8仍保持与现有32位体系结构兼容性的AArch32
    AArch64是Armv8-A体系结构中引入的64位状态
    用于aarch64的Apple后端称为arm64，而LLVM编译器社区开发的后端称为aarch64，后来两者合并，现在的后端称为aarch64 
    GNU和Linux文档有时称aarch64为arm64