工厂模式就是用其它的类（工厂类）的方法来创建目标类的实例

为什么不直接创建目标类的实例呢？
其实这要结合接口考虑，因为我们常常有多个类继承同样的接口，
用户要使用时，也只是要获取接口指针，而不是不是某个类的指针，
使用工厂模式，我们就可以让实现类对用户透明，后期我们想改用其他其它显示类，
也只需在用户侧做简单的改动即可。

为什么要用工厂模式？
如果功能类的创建比较麻烦，如需要传入比较复杂的构造参数，
或构造出来后需要在进行一些其他操作才能使用，则使用工厂模式可以解决
其次，可以起到解耦的目的，功能类和用户类之间没有任何直接耦合关系，
而是他们都和比较简单的工厂存在耦合关系。

对于简单工厂模式，尽管存在些微的缺陷（违反开闭原则），
但无论从简单易用性上，还是功能上，它带来的利好是远大于其弊端的：
要增加新功能类或替换现有功能类，直接在现有工厂上改，
尤其是升级现有产品类，客户端甚至都不需要该代码，
相比于在整个项目中搜索哪些地方创建了某一产品的实例，
使用简单工厂，直接找到这个工厂文件进行修改，会方便很多。

一般工厂模式的特点是，对每一个产品，都有一个专门的工厂类

工厂模式的另一个好处是：因为工厂文件是根据名字创建对象的，所以可以通过配置文件控制创建哪种对象
