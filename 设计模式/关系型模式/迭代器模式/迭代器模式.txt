迭代器模式：
集合类返回一个迭代器类对象，
借助迭代器对象，可以实现对集合类对象中各个成员的遍历。

为什么使用：
使用迭代器，本质就是提供了一个实用的遍历工具。
如果不使用迭代器，则需要用户在遍历集合类时，需要自己记录当前访问到集合的哪个位置了，如果使用迭代器，则迭代器帮使用者记录当前访问到集合的哪个位置。
在记录访问位置这个问题上，如果集合类使用的是数组结构，则用unsigned int这样的变量记录当前位置是比较合适的；如果集合类使用的是链表结构，则用void*这样的变量记录当前位置比较合理。如果使用迭代器，则可以把记录当前访问位置的变量屏蔽在迭代器类里面，从而用户不用管集合类用的是什么数据结构，可以用统一的方法（迭代器）来访问集合。

注意，集合类方法返回的迭代器对象，不应是单例的，因为可能需要多个迭代器同时存在，并指向集合的不同位置。
为了使用方便，迭代器类通常实现自增运算符，但不强制要求。