模板模式：（半成品模式）
完全区别于C++中的类模板，模板模式中没用到模板类/模板方法等技术。

这里的模板类，其实是个抽象类，所以为了跟c++中的模板类相混淆，可以称模板模式为半成品模式/总纲模式。

它的特点就是：a:提供了一些纯虚函数
              b:然后还有一个(或多个)已定义函数（即函数体已经固定写好了），
                在已定义函数中，调用的都是当前类中的各个纯属函数。
                这样的已定义函数，在这里，成为模板方法（实际不推荐这种叫法，因为容易和c++中的模板方法相混淆）

为什么叫模板方法呢？
    因为它调用别的虚方法，实际等于是设计了一套动作或规划了一套流程，
    但这套动作或流程又是基于抽象的，它可以被继承自该模板类的各种具体类拿来使用，
    基于它的通用性，所以称其为模板方法。而包含模板方法的类也就称为模板类。

适用性：
从总纲类的结构特点可以看出，他相当于一个框架类：
    对外，他提供某个具体功能，
    对内，则是把这个具体功能细化为一系列的子步骤，他把这些步骤定义为虚函数，等待它的子类去实现这些细节。
    
使用这种设计模式没啥不可替代性，用一个总纲类+几个实现类，和不用总纲类，直接各自写实现类差不多，唯一的有点大概就是能少些点代码。