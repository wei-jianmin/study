环境类维护状态数据

以下描述属个人当前阶段的见解，有可能是错误的

处理类
    当状态满足当前条件时就处理
    处理后，会改变环境类里的状态数据

从上面可以看出，这像是流水线的工作方式

这有点类似下面的代码方式：
    State s;
    do
    {
        if(s.satisfy(满足start条件))
            s = f1();
        if(s.satisfy满足f2的条件))
            s = f2();
        if(s.satisfy(满足f3的条件))
            s = f3();
        ...
        if(s.satisfy(失败))
            break;
    }while(true);
    
    
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

状态机的核心思想就是 ：
    管理器/环境类 根据不同的当前状态、不同的条件，
    去调用 相应处理类/状态类 中的方法

从状态机的核心思想，分析状态模式的结构：
    环境类负责状态类的最终调用（而不是用户）
    所以环境类肯定要记录状态类的指针
    于是状态类需要定义接口类
    如果环境类维护记录了多个状态类的指针
    则环境类除了要有添加状态类的接口外，还得能分清哪个状态类，
    keymap可能是一种存储策略，
    此外还可以让状态接口类包含返回自身身份信息的接口
    有的教程中环境类，环境类只含有一个状态类的指针

数据应在存在管理器中，还是存在处理类中的思考：
    如果数据是需要不同状态类协同处理的，那肯定是要放在管理器类中的
    于是，问题就变为，数据是不是共享的

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

状态转换图示例：
file://imgs/tcp状态转换图.jpg
file://imgs/游戏状态转换图.jpg
file://imgs/自动售卖机状态换换图.png

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

file://imgs/状态转换表.png

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

https://www.cnblogs.com/21207-iHome/p/6085334.html

状态机维护多个状态的 map<状态id,状态处理类>

状态处理类中判断