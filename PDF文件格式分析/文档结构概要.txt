标准的PDF文档一般包括四个部分：
文件头：用来存储PDF版本
文件体：用来存储间接对象，这是构成PDF比重最大的内容
交叉索引表：用来保存各个间接对象在文件中的起始地址
trailer：用来存储交叉索引表的起始位置，根对象（Root），加密对象（Encrypt），文档信息对象（Info）等

=============================================================

文件头：
PDF文件的第一行，它用来定义PDF的版本，从而确定该PDF遵循的哪个版本的PDF规范。
%PDF-1.x ，x的值为1~8，其中1.7版是最常见的，1.8的标准文档里没有，只有一些特殊的文件会使用。
pdf1.7标准在2009年有Adobe公司发布，同时Adobe公司宣布以后不会再发布PDF 1.8格式。未来的PDF版本将由ISO技术协会提供。

附注：
  在Catalog字典中，也存在Version属性（可选），它的值也是PDF版本号，
  该版本号如果高与文件头版本号，则采用这里的版本号，通常是在PDF增量写的情况下用到。
  
  PDF文件头有些情况下，并不只保存了版本号，还可能在版本号前面加一下用户自定义的内容，用来满足用户的特殊需求。
  
=============================================================

pdf其它格式：
在转换文件的过程中经常在另存为选项中看到PDF/X、PDF/E和PDF/A
PDF/X标准应用于图形内容交换；PDF/E标准应用于工程文档的交互式交换；
PDF/A标准应用于电子文档的长期归档，基本上就是屏蔽了一些不适合的功能，如Javascript，音频、视频等等。

=============================================================

交叉引用表：
该表保存了所有间接对象在PDF文件中物理偏移地址。该表在文件中可以存在单个，也可以存在多个。
多个交叉引用表通常出现在两个情况：一、增量保存，二、线性化。
交叉引用表以单词“xref”开头。 
引用表项的格式：
间接对象号  间接对象的个数（对象号是连续的）
在文档中的偏移地址   对象的修改版本   对象的标记

=============================================================

增量更新：
增量更新是pdf1.7引入的规范
header   ──┐
body       │   原有内容
xref       │
trailer  ──┘
body     ──┐
xref       │   增量更新内容
trailer  ──┘
在trailer之后（%%OEF之前）一般还有个startxref，指明xref交叉引用表的位置，
在trailer的字典中，如果本trailer是增量更新内容，则其中还有一个/Prev键值对，指明上个xref交叉引用表的位置。
更新内容的交叉引用表仅包含本次更新的对象。
当PDF阅读器解析PDF文档时，它从文件末尾开始解析。
它读取最后一个预告片并跟随到根对象和交叉引用表的链接，以构建它将要呈现的文档的逻辑结构。
当阅读器遇到更新的对象时，它会忽略相同对象的原始版本。
一个PDF文件允许增量更新的次数不受限制。简单的判断PDF是否增量更新的方法是：文档中存在多个“%%EOF”

=============================================================

文件加密
PDF加密方式目前已经增加为三种：
1、口令加密
2、证书加密
3、Adobe LiveCycle Rights Management
口令加密：
    作为第一代PDF安全加密方式，到现在也一直广泛应用。
    口令加密分为：文档打开密码（open password）、权限密码（permission password）。
    文档打开密码：要求用户在打开文件时，需要输入密码
    权限密码：打开PDF文件并进行阅读，并不需要权限密码，
              只有更改权限设置或进行受限制操作时（打印，编辑和复制PDF中的内容），才需要输入权限密码。
证书加密：
    现在证书被大家广泛的应用，如：我们每天会访问大量的HTTPS网站。
    在PDF文件中，我们也可以通过证书加密来确保PDF的安全。
    数字签名可确保收件人证明文件来自制作者，而证书加密可确保只有预期的收件人才能查看内容。
Adobe LiveCycle Rights Management
    一个基于服务器的安全系统，可以对PDF进行动态控制。
    安全策略存储在运行Adobe LiveCycle Rights Management ES 的服务器上，但PDF不存储。
    在某些情况下，用户需要连接到服务器才能打开或继续使用应用了安全策略的PDF
    
加密算法：
    早期版本 使用40-128（8的倍数）位RC4加密
    Acrobat 6.0及更高版本（PDF 1.5）使用128位RC4加密文档。
    Acrobat 7.0及更高版本（PDF 1.6）使用128位AES加密算法对文档进行加密。
    Acrobat X及更高版本（PDF 1.7）  使用256位AES加密文档。 
  
加密内容：
    加密所有文档内容
    加密文档和文档元数据。如果选择此选项，则搜索引擎无法访问文档元数据。
    加密除元数据之外的所有文档内容
    仅加密文件附件
  
PDF解密的流程：
    1、在trailer中找到Encrypt和ID
    2、解析Encrypt字典，获取加密相关属性
    3、根据Encrypt字典中的参数，计算encryption key
    4、解析对象时，对string对象和stream对象，使用encryption key进行解密。
    
=============================================================



=============================================================


=============================================================


=============================================================


=============================================================


=============================================================


=============================================================


=============================================================


=============================================================


=============================================================


=============================================================

