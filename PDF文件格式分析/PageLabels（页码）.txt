pdf为页面添加页码的思想有点类似word，将文档分为多节，
只记录每节的起始页号，后一节的起始页号-1，即为前一节的终止页号，
每一节都可以单独的指定采用什么样式展示（罗马数字、阿拉伯数组、字母等）
pdf阅读器显示页面时，按前面描述，自动为每一节的各个页面添加页码。

在Catalog下可以有/PageLabels名字对象，它的值为字典类型。
PageLabels 页面标签可用于描述页面应该按什么样的规则为页面添加页码。

例如：  要为页面添加的页码样式为： i，ii，iii，iv，1,2,3，A-8，A-9，……，则可如下：
1 0 obj
<< /Type /Catalog
   /PageLabels <<
        /Nums [ 
            0 << /S /r >> 
            4 << /S /D >> 
            7 << /S /D  /P (A-) /St 8 >>
        ]
    >>
    。。。
>>
从例子中可以总结出如下规律：
PageLabels字典中只有一个键值对，键为名字对象类型（/Nums），值为数组类型(页码描述数组，指定多节页面编号方式)，
数组的元素类型为 数字（本节页面编号的起始页码） 和 字典（本节页面编号的样式） 类型的重复（一个数组中允许同时保护多种类型数据），
虽然页码描述数组中的元素有点类似键值对的规律，但这里却不适合使用字典类型（来描述各节页面的编号方式），
因为字典类型要求键名唯一，而且key的类型是name对象，这里的页码不能作为key。
页码描述数组中数字类型元素（0，4，7）将所有页面分成了三节：0-3、4-6、7-最后一页，每节使用自有的页面编号样式，
关注例子中最后一节(7-最后一页)所使用的页面编号方式的描述：
它是一个字典类型，支持的键值有：
  /S  他对应的值也是名字类型，允许的值有
      /D - 阿拉伯数字（1,2,3 ……）
      /r - 小写罗马数字（i，ii，iii，…）
      /R - 大写罗马数字（I，II，III，…）
      /A - 大写字母（AZ）
      /a - 小写字母（az）
  /P  页码的前缀，字符串类型  
  /St 页码的起始编号，数字类型，默认为1
  说明：该字典中这三个键(/S /P /St)都是可选的，当没有/S时，意味着该节的页码只显示前缀，如果前缀也没有，则该节没有页码

