Qt创建线程的方法总结
========================================================================================
方法一：继承QThread的run函数
    Thread只有run函数是在新线程里的，其他所有函数都在QThread所处的线程里。
    任何继承于QThread的线程都是通过继承QThread的run函数来实现多线程的，
    因此，必须重写QThread的run函数，把复杂逻辑写在QThread的run函数中。
    成员方法：
        start
            调用start()方法让线程对象执行。内部调用run方法。
            操作系统会根据优先级进行调度。
            如果线程已经执行，则该函数不起作用。
        run
            线程的起始点，当调用start后，新创建的线程调用该函数。
            该函数的默认实现是简单的调用exec函数。
            你可以重写该函数，从该函数返回，意味着将结束线程的执行。
        exec
            进入事件循环，等待，直到exit方法被调用。
            该函数应该在run中调用。
            需要通过调用该函数来开始事件处理。
        exit
            告诉线程使用指定的返回值结束事件循环
            调用了该函数后，线程会离开事件循环并从exec调用中返回，
            exit函数的参数值，就是exec的返回值。
            不像C库中的同名exit函数，该函数不是返回到调用者中，
            而是通过事件完成停止相关处理。
            直到重新调用exec前，QEventLoops将不会启动。
            如果exec中的事件循环没有执行，那么对exec的二次调用同样会立即返回。
        terminate
        quit
            告诉线程事先循环以返回值0进行结束。等价于调用QThread::exit(0)
            如果线程没有事件循环，则该函数什么也不做。
        wait
            阻塞当前线程，直到时间超时（如果使用默认时间ULONG_MAX，则永不超时，时间超时时，函数返回false），
            或当关联的线程结束（此时wait返回ture，当关联线程还没启动时，该函数也是返回true）
        usleep
            强制当前线程睡眠指定时间。
方法二：把一个继承于QObject的类转移到一个Thread里（推荐，更加灵活）