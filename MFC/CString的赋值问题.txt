CString str1,str2;
str1=_T("abc");
str2=str1;
上面这种赋值方式是有隐患的，
Cstring的内存是智能管理的，
向上面这种赋值方式，
则str1和str2实际指向的是同一块内存，
所以当使用像如_tcstok这样的方法对str1直接进行内存更改时，
就会导致str2的值也跟随更改，从而出现不希望的结果
正确的赋值方式应采用：
str2.Format(_T("%s"),str1);

另外，str1的内存也不推荐直接进行外部操作，
像如_tcstok这样更改内存的函数，
应先把str1的值放到一个字符数组中，
然后_tcstok对字符数组进行操作

