在介绍SIGHUP信号之前，先来了解两个概念：进程组和会话

进程组
    系统中的每一个进程也必须从属于某一个进程组；
    每个进程组中都会有一个唯一的 ID(process group id)，简称 PGID
    PGID 一般等同于创建进程组的进程的 Process ID，
    而这个（创建进程组的）进程一般也会被称为进程组先导，
    一进程组中除了进程组先导外的其他进程都是其子进程；
    我们可以一次性发送一个信号量给同一进程组中的所有进程
    注：一个由用户启动的进程通常形成一个新的进程组
        如果该进程创建了子进程，则各级子进程也属于该进程组

会话
    会话（session）是一个若干进程组的集合
    系统中每一个进程组也都必须从属于某一个会话
    个会话只拥有最多一个控制终端（也可以没有）
    该终端为会话中所有进程组中的进程所共用
    一个会话中前台进程组只会有一个，
    只有其中的进程才可以和控制终端进行交互；
    除了前台进程组外的进程组，都是后台进程组
    会话中也有会话先导的概念，用来表示建立起到控制终端连接的进程
    该进程也被称为控制进程
    
SIGHUP信号的触发及默认处理    
    SIGHUP 信号在用户终端连接(正常或非正常)结束时发出, 
    通常是在终端的控制进程结束时, 
    通知同一session内的各个作业, 这时它们与控制终端不再关联
    系统对SIGHUP信号的默认处理是终止收到该信号的进程。
    所以若程序中没有捕捉该信号，当收到该信号时，进程就会退出。
    
SIGHUP会在以下3种情况下被发送给相应的进程：
    1、终端关闭时，该信号被发送到session首进程
       以及作为job提交的进程（即用 & 符号提交的进程）；
　　2、session首进程退出时，该信号被发送到该session中的前台进程组中的每一个进程；
　　3、若父进程退出导致进程组成为孤儿进程组，
       且该进程组中有进程处于停止状态（收到SIGSTOP或SIGTSTP信号），
       该信号会被发送到该进程组中的每一个进程。

    