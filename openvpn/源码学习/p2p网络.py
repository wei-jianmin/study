https://zhuanlan.zhihu.com/p/110172094
    对等网络，是相对客户机/服务器模式的另一种网络信息交换方式
    众多节点（Peer）相互直接或间接连接形成的网络，
    当一个节点被周围节点问到是否有某个数据包时，
    可以轻松通过该数据包的哈希值判断是否有，
    如果有，就会传送给来问的那个节点
    P2P网络有能力发现伪装的不正常的节点
    区块链和比特币是P2P网络的应用案例
    对等网络去中心化，解决了客户机/服务器模式下服务器的性能限制和宕机问题
    
对等网络的基本结构
https://blog.csdn.net/u014253011/article/details/81089421
    （1）集中式对等网络（如：Napster、QQ）
        集中式对等网络基于中央目录服务器，
        为网络中各节目提供目录查询服务，传输内容无需再经过中央服务器
        这种网络，结构比较简单，中央服务器的负担大大降低。
        但由于仍存在中央节点，容易形成传输瓶颈，
        扩展性也比较差，不适合大型网络。
        但由于目录集中管理，对于小型网络的管理和控制上倒是一种可选择方案。
    （2）无结构分布式网络（Gnutella）
        它没有中央服务器，所有结点通过与相邻节点间的通信，接入整个网络
        在无结构的网络中，节点采用一种查询包的机制来搜索需要的资源。
        具体的方式为：某节点将包含查询内容的查询包发送到与之相邻的节点，
        该查询包以扩散的方式在网络中蔓延，
        由于这样的方式如果不加节制，会造成消息泛滥，
        因此一般会设置一个适当的生存时间（TTL），
        在查询的过程中递减，当TTL值为0时，将不再继续发送。
        这种无结构的方式，组织方式比较松散，节点的加入与离开比较自由，
        当查询热门内容时，很容易就能找到，但如果需求的内容比较冷门，
        较小的TTL不容易找到，而较大的TTL值又容易引起较大的查询流量，
        尤其当网络范围扩展到一定规模时，
        即使限制的TTL值较小，仍然会引起流量的剧增。
        但当网络中存在一些拥有丰富资源的所谓的类服务器节点时，可显著提高查询的效率。
    （3）结构化分布式网络（第三代P2P Pastry、Tapestry、Chord、CAN）
        基于近几年分布式哈希表（Distributed Hash Table）技术的研究成果。
        它的基本思想是将网络中所有的资源整理成一张巨大的表，
        表内包含资源的关键字和所存放结点的地址，
        然后将这张表分割后分别存储到网络中的每一结点中去。
        当用户在网络中搜索相应的资源时，
        它将能发现存储与关键词对应的哈希表内容所存放的结点，
        在该结点中存储了包含所需资源的结点地址，
        然后发起搜索的结点根据这些地址信息，与对应结点连接并传输资源。
        这是一种技术上比较先进的对等网络，
        它具有高度结构化，高可扩展性，结点的加入与离开比较自由。
        这种方式适合比较大型的网络。
        
两个没有公网IP的终端如何进行通信？
https://blog.csdn.net/SAMCYC/article/details/106481529
    在P2P应用中，内网主机（客户端）需要对另外的终端（Peer）直接建立链接，
    但是发起者和响应者可能在不同的中间件（路由器、防火墙等）后面，两者都没有公网IP地址。
    而外部对NAT公网IP和端口主动的链接或数据都会因内网未请求被丢弃掉。
    本文讨论的就是如何跨越NAT实现内网主机直接通讯的问题。
    
    
UPnP协议 
    https://zhuanlan.zhihu.com/p/40407669
    在私有网络和公网交互的时候，
    私有网络中的主机使用的是内网 IP 地址，是无法被外网的主机直接访问的。
    必须借助 NAT 网关设备（本地路由器）把内网地址映射到网关的公网地址上。
    当内网中的主机想要被外界主机直接访问
    我们就需要在 NAT 设备中为当前主机手工配置端口映射
    UPnP 技术标准的出现就是为了替代手工配置端口映射而出现的
    只要 NAT 设备（路由器）支持 UPnP，并开启。
    当我们的主机（或主机上的应用程序）向 NAT 设备发出端口映射请求的时候，
    NAT 设备就可以自动为主机分配端口并进行端口映射
    这样，我们的主机就能够像公网主机一样被网络中任何主机访问了。
    UPnP 的应用场景
        UPnP 典型的应用场景就是家庭智能设备的互联
    实现 UPnP 必须同时满足三个条件：
        NAT 网关设备必须支持 UPnP 功能；
        操作系统必须支持 UPnP 功能；比如 Windows 系列操作系统；
        应用程序必须支持 UPnP 功能；比如 Bt、eMule、IPFS, Ethereum 等。
    