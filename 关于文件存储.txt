流的概念：
流式存储是操作系统存储数据所使用的手段，不管任何数据，都是按流的方式进行存储的。不过流又可分为字节流和文本流。

"流"是一种特殊的数据(当然就是名词了)。这种数据的特殊性在于，它是动态的和线性的，动态的是指数据的内容和时间相关，比如在某个时候你从一个“流” 里读到的是一个数字，下一次你再读就不是原来的内容了，而变了。线性的是指流只在纵向上有长度，在横向上没有维度，具体地说，就是每次流只能读一个字符， 不可能一次同时读两个字符。所有的看起来好像是一次读入多个字符的操作，其本质都是通过顺序读取多个字符实现的。   
 听起来好像 很抽象，其实这是非常具体的。比如你在阅读我的这篇回复的同时，你实际上就在做流的操作。虽然最后文章显示的时候有宽度有长度，但是没有人是一眼看完全部 就理解的。你阅读的时候，必然是按照从左到右从上到下的顺序来逐字阅读的。这样你就把一篇字符文本变成你容易理解的文本流。这就是一个流的例子。另外一个 流的例子就是口语。比如我们说话的时候，发音是逐个按照一定的时间顺序出现的。我们理解的时候，也是按照一定的时间顺序接受的。没有谁能听懂在同一时间内发出一个句子里所有音节的话。   
 从日常生活你可以这样理解流，虽然在计算机科学里对流有更为严格的定义，但是一般用不着了。一般把它理解成像水流一样，“过了这个村，没有这个店”，大概就可以了。   
  C语言里的流，就是一种具有自动顺序操作的数据结构。比如假设你用文本流来读数据，你只要说，让我们从这个流的头开始读入数据，然后每次你只需要说继续从 这个流读，那么后面的数据就自动读进来了。或者你往文本里写数据，那么每次你只要说往流里面写，那么数据就添加到文本里去了。流，就是这样一种抽象的动态 数据模型。

流是数据的输入和输出（如同流动的河水），把磁盘文件或者物理设备都看作是一种流的源或目的。二进制流就是流动着的是二进制序列，文本流就是流动的数据以字符形式出现。 


  